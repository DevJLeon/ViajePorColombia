// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Data.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20240311044720_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Origin")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("TransportId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TransportId" }, "fk_Flight_Transport_idx");

                    b.ToTable("flight", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Journey", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Origin")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("journey", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Journeyflight", b =>
                {
                    b.Property<int>("FlightId")
                        .HasColumnType("int")
                        .HasColumnName("Flight_Id");

                    b.Property<int>("JourneyId")
                        .HasColumnType("int")
                        .HasColumnName("Journey_Id");

                    b.HasKey("FlightId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FlightId" }, "fk_JourneyFlight_Flight1_idx");

                    b.HasIndex(new[] { "JourneyId" }, "fk_JourneyFlight_Journey1_idx");

                    b.ToTable("journeyflight", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Transport", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("FlightCarrier")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FlightNumber")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("transport", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Flight", b =>
                {
                    b.HasOne("Domain.Entities.Transport", "Transport")
                        .WithMany("Flights")
                        .HasForeignKey("TransportId")
                        .IsRequired()
                        .HasConstraintName("fk_Flight_Transport");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("Domain.Entities.Journeyflight", b =>
                {
                    b.HasOne("Domain.Entities.Flight", "Flight")
                        .WithOne("Journeyflight")
                        .HasForeignKey("Domain.Entities.Journeyflight", "FlightId")
                        .IsRequired()
                        .HasConstraintName("fk_JourneyFlight_Flight1");

                    b.HasOne("Domain.Entities.Journey", "Journey")
                        .WithMany("Journeyflights")
                        .HasForeignKey("JourneyId")
                        .IsRequired()
                        .HasConstraintName("fk_JourneyFlight_Journey1");

                    b.Navigation("Flight");

                    b.Navigation("Journey");
                });

            modelBuilder.Entity("Domain.Entities.Flight", b =>
                {
                    b.Navigation("Journeyflight");
                });

            modelBuilder.Entity("Domain.Entities.Journey", b =>
                {
                    b.Navigation("Journeyflights");
                });

            modelBuilder.Entity("Domain.Entities.Transport", b =>
                {
                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
